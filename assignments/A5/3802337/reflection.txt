# Exercise 1

Solved in a similar manner to the reference answers. `vmap` is implemented
as in Haskell's Prelude.

# Exercise 2

Matrix addition and the identity matrix have a more verbose implementation (using
helper functions), but get correct results.
Matrix transposition uses `vmap` instead of `pure .. <*> ..`, which from the
definition of `vmap` is equal.

# Exercise 3

Equivalent to reference answers.

# Exercise 4

Instead of `cmp ... with cmp ...` a helper function is used, the implementation
is otherwise equivalent to the reference answers.

# Exercise 5

All but `distributivity` was answered correctly (3/4).

# Exercise 6

All but `SubListAntiSym` was answered correctly (2/3).

# Exercise 7 (LEQ)

This is given as exercise 8 in the solutions.
The answers are equivalent to the reference solutions (just using different names).

# Exercise 8 (Not)

This is given as exercise 7 in the solutions.
Missing answers for `step2`/`step3` (3/5).

# Exercise 9

All anwers given correctly.

# Final Grade

Assuming that each exercise has the same weight in the final grade..

8.9/10
